<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context-2.5.xsd
	 http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	 http://www.springframework.org/schema/tx
	 http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


	<!-- 开启注解 -->
    <context:annotation-config/>
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.gdut"></context:component-scan>
    <!-- 开启AspectJ注解支持-->
	<aop:aspectj-autoproxy/>	
	<!-- 开启注解式事务  -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>



	<!-- 数据源配置 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">        
	    <property name="location" value="classpath:jdbc.properties"/>        
	</bean>   
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	    <property name="driverClass" value="${jdbc.driver}"/>
	    <property name="jdbcUrl" value="${jdbc.url}"/>
	    <property name="user" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	    
	    <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3  -->
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
		<!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
    	<property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
    	<!-- 最大空闲时间,规定时间内未使用则连接被丢弃。若为0则永不丢弃。Default: 0  -->
    	<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
    	<!-- 连接池中保留的最大连接数。Default: 15 --> 
    	<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
    	<!-- 连接池中保留的最小连接数 -->  
    	<property name="minPoolSize" value="${c3p0.minPoolSize}"/>
 	</bean>

  	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    	<property name="dataSource" ref="myDataSource"/>
    	<property name="packagesToScan">
			<list>
				<value>com.gdut.po</value>
			</list>
		</property>
    	<property name="hibernateProperties">
    		<value>
       		 	hibernate.dialect=org.hibernate.dialect.MySQLDialect
        		hibernate.show_sql=true
        	    hibernate.hbm2ddl.auto=update
        	</value>
    	</property>
    	
 	</bean>
	
 	<!-- HibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>



	<!-- 事务管理器  -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory"/>
  	</bean>
  	
  	<!-- 事务传播特性   -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<!-- 传播规则值为required表示若当前事务存在，该方法会会再该事务中运行，否则会启动一个新事务 -->
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="run*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="load*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
    </tx:advice>
  
    <!-- 参与事务的方法-->
    <aop:config>
   		<aop:advisor pointcut="execution(* com.gdut.dao.*.*(..))" advice-ref="txAdvice"/>
	</aop:config>
</beans>
  
  

